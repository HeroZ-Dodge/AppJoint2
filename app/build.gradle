apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'auto-register'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.dodge.hero.z.appjoint"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [APP_JOINT_MODULE_NAME: project.getName()]
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

autoregister {
    // https://github.com/luckybilly/AutoRegister
    registerInfo = [
            [
                    'scanInterface'        : 'com.dodge.hero.z.library.IAppJointProvider',
                    'codeInsertToClassName': 'com.dodge.hero.z.library.AppJoint',
                    'codeInsertToMethodName'  : 'init',
                    'registerMethodName'   : 'register',
                    //排除的类，支持正则表达式（包分隔符需要用/表示，不能用.）
                    //排除这个基类
//                    'exclude'              : ['com.billy.android.autoregister.demo.BaseCategory'.replaceAll('\\.', '/')]
            ]
    ]
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':annotation')
    annotationProcessor project(':processor')
    implementation project(':library')
    implementation project(':module1')
}
